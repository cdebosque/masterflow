<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://ref.antidot.net/store/afs#" xmlns:afs="http://ref.antidot.net/afs#"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://ref.antidot.net/store/afs#"
  version="2.7" elementFormDefault="qualified">
  <xs:import schemaLocation="afs_BasicTypes.xsd" namespace="http://ref.antidot.net/afs#"/>
  <xs:include schemaLocation="afs-store_CatalogTypes.xsd"/>
  <xs:annotation>
    <xs:documentation xml:lang="en">E-commerce article schema. Designed for AFS@Store. It supports
      common article type</xs:documentation>
    <xs:documentation xml:lang="fr">Schéma générique pour supporter les contenus éditoriaux liés à
      un catalogue e-commerce. Modélisé pour AFS@Store.</xs:documentation>
  </xs:annotation>

  <xs:complexType name="descriptionsType">
    <xs:sequence>
      <xs:element name="description" maxOccurs="unbounded">
        <xs:complexType>
          <xs:simpleContent>
            <xs:restriction base="descriptionType">
              <xs:maxLength value="300"/>
            </xs:restriction>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="identifiersType">
    <xs:annotation>
      <xs:documentation xml:lang="en">All identifiers which can be used to find the
        article.</xs:documentation>
      <xs:documentation xml:lang="fr">Tous les identifiants que l'on souhaite utiliser pour
        retrouver un article</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="identifier" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">Use this to put not predefined types of
            reference</xs:documentation>
          <xs:documentation xml:lang="fr">A utiliser pour définir un type de référence non
            préféfini</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="afs:shortStringType">
              <xs:attribute name="type" type="afs:facetNameType" use="required"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="articleType">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="type" type="afs:stringIdElementType"/>
      <xs:element name="identifiers" type="identifiersType"/>
      <xs:element ref="websites"/>
      <xs:element name="published_at" type="afs:dateOrTime"/>
      <xs:element name="authors">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="author" type="afs:stringIdElementType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="classification" type="categoriesType"/>
      <xs:element name="brands">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="brand" type="brandType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="title">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="275"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="subtitle">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="275"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="text" type="longDescriptionType"/>
      <xs:element name="url_thumbnail" type="xs:anyURI"/>
      <xs:element name="url" type="xs:anyURI"/>
      <xs:element name="descriptions" type="descriptionsType"/>
      <xs:element name="misc" type="xs:anyType">
        <xs:annotation>
          <xs:documentation xml:lang="en">Put here any additional field you need for output
            rendering, without being indexed</xs:documentation>
          <xs:documentation xml:lang="fr">Champs libres dans store_items, dont vous auriez besoin en
            sortie, mais qui ne seront pas indexés</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
    <xs:attributeGroup ref="afs:mandatoryDocumentAttributes"/>
  </xs:complexType>

  <xs:element name="article" type="articleType"/>
</xs:schema>
