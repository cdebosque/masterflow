<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://ref.antidot.net/store/afs#"
  xmlns:afs="http://ref.antidot.net/afs#" targetNamespace="http://ref.antidot.net/store/afs#"
  version="2.7" elementFormDefault="qualified">
  <xs:import schemaLocation="afs_BasicTypes.xsd" namespace="http://ref.antidot.net/afs#"/>
  <xs:include schemaLocation="afs-store_CommonTypes.xsd"/>
  <xs:include schemaLocation="afs-store_CatalogTypes.xsd"/>
  <xs:annotation>
    <xs:documentation xml:lang="en">E-commerce product schema. Designed for AFS@Store. All goods are
      supported.</xs:documentation>
    <xs:documentation xml:lang="fr">Schéma d'une fiche produit e-commerce. Modélisé pour AFS@Store.
      Tout type de produit.</xs:documentation>
  </xs:annotation>

  <xs:simpleType name="GTINType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Global Trade Item Number, strictly 14 digits, englobes old
        EAN/UPC codes. For instance, an EAN13 code will begin by a zero digit to be transformed as a
        GTIN. Still, we accept UPC 12 and EAN 13 digits for simplification
        purposes</xs:documentation>
      <xs:documentation xml:lang="fr">Le GTIN remplace et englobe tous les anciens codes EAN. Mais
        pour des raisons d'interopérabilité, ce type pour AFS@Store acceptera aussi les GTIN de 12
        (UPC) ou 13 caractères (EAN13), bien qu'il suffise de les préfixer par un zéro pour qu'il
        soit des GTIN valides</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:pattern value="\d{12,14}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="marketingValue">
    <xs:simpleContent>
      <xs:extension base="afs:booleanByte">
        <xs:attribute name="display_name" type="afs:facetLabelType" use="optional">
          <xs:annotation>
            <xs:documentation xml:lang="en">Label of this value for marketing
              facet</xs:documentation>
            <xs:documentation xml:lang="fr">Libellé de cette valeur pour la facette
              marketing</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="marketingType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Here we put all marketing information that will influence sort
        order or product display. Will be also available as facets</xs:documentation>
      <xs:documentation xml:lang="fr">On met ici toutes les informations marketing qui influenceront
        l'ordre des produits, ou bien leur mise en avant. Ces champs définissent aussi des
        facettes</xs:documentation>
    </xs:annotation>
    <xs:choice minOccurs="1" maxOccurs="unbounded">
      <xs:element name="is_promotional" type="marketingValue"/>
      <xs:element name="is_new" type="marketingValue"/>
      <xs:element name="is_best_sale" type="marketingValue"/>
      <xs:element name="is_featured" type="marketingValue">
        <xs:annotation>
          <xs:documentation xml:lang="en">A featured product will show up in
            autocompletion</xs:documentation>
          <xs:documentation xml:lang="fr">Un produit mis en avant apparaitra dans
            l'autocomplétion</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="operation">
        <xs:annotation>
          <xs:documentation xml:lang="en">Put here your custom flags</xs:documentation>
          <xs:documentation xml:lang="fr">Mettez ici vos opérations spécifiques non présentes dans
            les types prédéfinis</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="marketingValue">
              <xs:attribute name="name" type="afs:facetNameType" use="optional"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="priceType">
    <xs:annotation>
      <xs:documentation xml:lang="en">A product can have several prices: final, promotional, or
        depending of the country or if vat is included or not</xs:documentation>
      <xs:documentation xml:lang="fr">Un produit peut avoir plusieurs prix : final, promotionnel,
        dépendant du pays et de l'inclusion ou non de la TVA (en France les prix sont forcément
        TTC)</xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:decimal">
        <xs:attribute name="currency" type="afs:currencyCode" use="required"/>
        <xs:attribute name="type" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="PRICE_CUT">
                <xs:annotation>
                  <xs:documentation xml:lang="fr">Prix barré</xs:documentation>
                </xs:annotation>
              </xs:enumeration>
              <xs:enumeration value="PRICE_FINAL"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="quantity_from" type="xs:nonNegativeInteger" use="optional"/>
        <xs:attribute name="quantity_to" type="xs:nonNegativeInteger" use="optional"/>
        <xs:attribute name="vat" type="afs:percentType" use="optional"/>
        <xs:attribute name="vat_included" type="xs:boolean" use="optional"/>
        <xs:attribute name="shipping_cost" type="xs:decimal" use="optional"/>
        <xs:attribute name="shipping_included" type="xs:boolean" use="optional"/>
        <xs:attribute name="country" type="afs:countryCode" use="optional"/>
        <xs:attribute name="off" type="afs:percentType" use="optional">
          <xs:annotation>
            <xs:documentation xml:lang="en">Percentage of price cut. Should be pu only on
              PRICE_FINAL</xs:documentation>
            <xs:documentation xml:lang="fr">Pourcentage de la remise appliquée, à positionner sur le
              PRICE_FINAL</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="tariff_id" type="afs:stringId" use="optional">
          <xs:annotation>
            <xs:documentation xml:lang="en">Tariff grid id</xs:documentation>
            <xs:documentation xml:lang="fr">Identifiant de la grille tarifaire</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="pricesType">
    <xs:sequence>
      <xs:element name="price" type="priceType" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="descriptionsType">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="short_description" minOccurs="0">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="300"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="description" type="longDescriptionType" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">You can put there all textual descriptions you need to be
            indexed. Name attribute will allow a distinction between them, and relevance, a weight
            distinction at indexing time</xs:documentation>
          <xs:documentation xml:lang="fr">Vous pouvez mettre ici la ou les descriptions de votre
            produit que vous souhaitez voir indexées, dont l'attribut name permettra de les
            distinguer, et surtout pertinente, qui permettra d'appliquer une pondération différente
            suivant l'aspect qualitatif du contenu</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="topPropertyType">
    <xs:complexContent>
      <xs:extension base="propertyType">
        <xs:attribute name="name" type="afs:facetNameType" use="required">
          <xs:annotation>
            <xs:documentation xml:lang="en">This is the name of the facet that will be created for a
              property. Put the same name on two properties serves to defines multivalued facet for
              a given product</xs:documentation>
            <xs:documentation xml:lang="fr">Ceci est le nom de la facette qui sera générée. Si vous
              mettez le même sur deux propriétés, alors cela revient à multivaluer la facette pour
              ce produit</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="display_name" type="afs:facetLabelType" use="optional">
          <xs:annotation>
            <xs:documentation xml:lang="en">Label of the facet that will be created for a
              property</xs:documentation>
            <xs:documentation xml:lang="fr">Libellé de la facette qui sera
              générée</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="autocomplete" use="optional">
          <xs:annotation>
            <xs:documentation xml:lang="en">Creates an autocomplete feed on this meta data</xs:documentation>
            <xs:documentation xml:lang="fr">Créé une auto-complétion sur cette donnée</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="on"/>
              <xs:enumeration value="off"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="propertyType">
    <xs:sequence>
      <xs:element name="property" type="propertyType" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="id" type="afs:stringId" use="optional"/>
    <xs:attribute name="label" type="afs:facetValueType" use="required"/>
    <xs:attributeGroup ref="richAcp"/>
    <xs:anyAttribute processContents="lax"/>
  </xs:complexType>

  <xs:complexType name="propertiesType">
    <xs:sequence>
      <xs:element name="property" type="topPropertyType" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="identifiersType">
    <xs:annotation>
      <xs:documentation xml:lang="en">All identifiers which can be used to find the
        product.</xs:documentation>
      <xs:documentation xml:lang="fr">Tous les identifiants que l'on souhaite utiliser pour
        retrouver un produit</xs:documentation>
    </xs:annotation>
    <xs:choice maxOccurs="unbounded">
      <xs:element name="gtin" type="GTINType"/>
      <xs:element name="supplier_id" type="afs:shortStringType"/>
      <xs:element name="manufacturer_id" type="afs:shortStringType"/>
      <xs:element name="reseller_id" type="afs:shortStringType"/>
      <xs:element name="identifier" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">Use this to put not predefined types of
            reference</xs:documentation>
          <xs:documentation xml:lang="fr">A utiliser pour définir un type de référence non
            préféfini</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="afs:shortStringType">
              <xs:attribute name="type" type="afs:facetNameType" use="required"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>

  <xs:complexType name="audienceType">
    <xs:all>
      <xs:element name="genders" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="gender" type="afs:stringIdElementType" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation xml:lang="en">Gender in a global way: male, female, boy, girl,
                  family, etc.</xs:documentation>
                <xs:documentation xml:lang="fr">Genre ou public cible, au sens large : famille,
                  enfant, homme, garçon, fille, etc.</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="ages" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="age" type="afs:stringIdElementType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>

  <xs:group name="storeProductGroup">
    <xs:annotation>
      <xs:documentation xml:lang="en">Defines all fields common to stores and
        products but not to variants</xs:documentation>
      <xs:documentation xml:lang="fr">Définis toutes les caractéristiques caractéristiques produit
        propres à un magasin ou à une produit mais pas à ses déclinaisons</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="marketing" type="marketingType"/>
    </xs:choice>
  </xs:group>

  <xs:group name="storeGroup">
    <xs:annotation>
      <xs:documentation xml:lang="en">Defines all fields common to stores and
        variants</xs:documentation>
      <xs:documentation xml:lang="fr">Définis toutes les caractéristiques caractéristiques produit
        propres à un magasin ou à une variante</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="prices" type="pricesType"/>
      <xs:element name="stock" type="xs:nonNegativeInteger"/>
      <xs:element name="is_available" type="afs:booleanByte"/>
      <xs:element name="url" type="xs:anyURI"/>
      <xs:element name="misc" type="xs:anyType">
        <xs:annotation>
          <xs:documentation xml:lang="en">Put here any additional field you need for output
            rendering, without being indexed</xs:documentation>
          <xs:documentation xml:lang="fr">Champs libres dans store_items, dont vous auriez besoin en
            sortie, mais qui ne seront pas indexés</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:choice>
  </xs:group>

  <xs:complexType name="storesType">
    <xs:annotation>
      <xs:documentation xml:lang="en">Stores are used to indicate product is sold in different
        stores, and to describes properties that may vary depending on these
        stores</xs:documentation>
      <xs:documentation xml:lang="fr">Les boutiques permettent d'une part de préciser les magasins
        dans lesquels est disponible le produit, et d'autre part des informations sur ce produit
        pour chaque magasin (état des stocks, prix, etc.)</xs:documentation>
    </xs:annotation>
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:element name="store">
        <xs:complexType>
          <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="storeGroup"/>
            <xs:group ref="storeProductGroup"/>
          </xs:choice>
          <xs:attribute name="id" type="afs:stringId" use="required"/>
          <xs:attribute name="name" type="afs:shortStringType" use="optional"/>
          <xs:attribute name="url" type="xs:anyURI" use="optional"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:group name="variantGroup">
    <xs:annotation>
      <xs:documentation xml:lang="en">Defines all fields used for both a product and its
        variants</xs:documentation>
      <xs:documentation xml:lang="fr">Définis tous les champs utiles à la fois pour décrire un
        produit ou ses variantes</xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:group ref="storeGroup"/>
      <xs:element name="identifiers" type="identifiersType"/>
      <xs:element name="name">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="170">
              <xs:annotation>
                <xs:documentation xml:lang="en">Warning: Google Shopping length is
                  70</xs:documentation>
                <xs:documentation xml:lang="fr">Attention : cette restriction est à 70 sur Google
                  Shopping</xs:documentation>
              </xs:annotation>
            </xs:maxLength>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="properties" type="propertiesType">
        <xs:annotation>
          <xs:documentation xml:lang="en">Define here all specific facets you need, and they will be
            dynamically created</xs:documentation>
          <xs:documentation xml:lang="fr">Définissez ici toutes les facettes spécifiques dont vous
            avez besoin, elles seront générées automatiquement</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="descriptions" type="descriptionsType"/>
      <xs:element name="models">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="model" type="afs:stringIdElementType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="stores" type="storesType">
        <xs:annotation>
          <xs:documentation xml:lang="en">Caution: Stores can be set at product OR variant level,
            but not both at the same time</xs:documentation>
          <xs:documentation xml:lang="fr">Attention : les magasins peuvent être décrits au niveau
            produit OU au niveau variante, mais pas au deux en même temps</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="colors">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="color" type="afs:stringIdElementType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="sizes">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="size" type="afs:stringIdElementType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="materials">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="material" type="afs:stringIdElementType" maxOccurs="unbounded">
              <xs:annotation>
                <xs:documentation xml:lang="fr">Matière, composant</xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="audience" type="audienceType"/>
      <xs:element name="url_thumbnail" type="xs:anyURI"/>
      <xs:element name="url_image" type="xs:anyURI"/>
    </xs:choice>
  </xs:group>

  <xs:complexType name="productType">
    <xs:choice maxOccurs="unbounded">
      <xs:group ref="variantGroup" minOccurs="0"/>
      <xs:element name="short_name">
        <xs:annotation>
          <xs:documentation xml:lang="en">Short name will be used for
            autocompletion</xs:documentation>
          <xs:documentation xml:lang="fr">Libellé court, il sera utilisé par
            l'autocomplétion</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="45">
              <xs:annotation>
                <xs:documentation xml:lang="en">35 in EAN-UCC/GS1 definition</xs:documentation>
                <xs:documentation xml:lang="fr">35 chez EAN-UCC/GS1</xs:documentation>
              </xs:annotation>
            </xs:maxLength>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element ref="websites"/>
      <xs:element name="created_at" type="afs:dateOrTime"/>
      <xs:element name="last_updated_at" type="afs:dateOrTime"/>
      <xs:element name="published_at" type="afs:dateOrTime"/>
      <xs:element name="classification" type="categoriesType"/>
      <xs:element name="brand" type="brandType"/>
      <xs:element name="keywords" type="xs:string">
        <xs:annotation>
          <xs:documentation xml:lang="en">List of keywords, using space or coma
            separator</xs:documentation>
          <xs:documentation xml:lang="fr">Liste de mots clé, séparés par des espaces ou des
            virgules</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:group ref="storeProductGroup"/>
      <xs:element name="location">
        <xs:annotation>
          <xs:documentation xml:lang="en">Postal address</xs:documentation>
          <xs:documentation xml:lang="fr">Adresse postale</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:group ref="location"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="geo">
        <xs:annotation>
          <xs:documentation xml:lang="en">Product geolocation</xs:documentation>
          <xs:documentation xml:lang="fr">Coordonnées géographiques du produit</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:group ref="geopos" maxOccurs="2"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="feedback">
        <xs:annotation>
          <xs:documentation xml:lang="en">User or reviewer feedback</xs:documentation>
          <xs:documentation xml:lang="fr">Avis utilisateurs ou critique</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:all>
            <xs:element name="reviewer_rating" type="xs:decimal" minOccurs="0"/>
            <xs:element name="customers_rating" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">Average customers' rating</xs:documentation>
                <xs:documentation xml:lang="fr">Note moyenne des utilisateurs</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:decimal">
                    <xs:attribute name="votes" type="xs:nonNegativeInteger" use="optional">
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Number of customer votes used for computing
                          average rating</xs:documentation>
                        <xs:documentation xml:lang="fr">Nombre de notes utilisées pour le calcul de
                          la moyenne</xs:documentation>
                      </xs:annotation>
                    </xs:attribute>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
            <xs:element name="facebook_like" type="xs:nonNegativeInteger" minOccurs="0"/>
          </xs:all>
        </xs:complexType>
      </xs:element>
      <xs:element name="variants">
        <xs:annotation>
          <xs:documentation xml:lang="en">Product variants, well suited for
            apparel</xs:documentation>
          <xs:documentation xml:lang="fr">Déclinaisons produit, si applicables. Convient
            particulièrement aux variantes tailles-couleurs du textile</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="variant" maxOccurs="unbounded">
              <xs:complexType>
                <xs:choice maxOccurs="unbounded">
                  <xs:group ref="variantGroup"/>
                </xs:choice>
                <xs:attribute name="id" type="afs:stringId" use="required"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:choice>
    <xs:attributeGroup ref="afs:mandatoryDocumentAttributes"/>
  </xs:complexType>

  <xs:element name="product" type="productType"/>
</xs:schema>
